---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This Template will create VPC and Public
  subnet with Internet Gateway and Routing table

Parameters:
  VpcCIDR:
    Default: "10.0.0.0/16"
    Description: >
      The IP range 
      (CIDR notation) for this 
      VPC
    Type: String
  PublicSunetCIDR:
    Default: "10.0.0.0/24"
    Description: >
      The IP range 
      for the public sunbnet 1
      (CIDR notation)
    Type: String
  InstanceType:
    Default: "t2.micro"
    Description: >
      Instance Type for launching 
      ec2 instance.
    Type: String
  ImageId:
    Default: "ami-0e742cca61fb65051"
    Description: >
      Instance Type for launching 
      ec2 instance.
    Type: String
  ImageId2:
    Default: "ami-0f8ca728008ff5af4"
    Description: >
      Instance Type for launching 
      ec2 instance.
    Type: String
  KeyName:
    Default: "com"
    Description: >
      "Instance Key"
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: com-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw-com-vpc
  VpcAttachmentGateway:
    DependsOn: VPC
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSunetCIDR
      Tags:
        - Key: Name
          Value: public-subnet-1-com-vpc
      VpcId: !Ref VPC
  PublicRouteTable:
    DependsOn: VPC
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: public-route-table-com-vpc
  PublicRoute:
    DependsOn: [InternetGateway, PublicRouteTable]
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicRouteTableAssociation:
    DependsOn: [PublicRouteTable, PublicSubnet]
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  EC2SecurityGroups:
    DependsOn: VPC
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "SG for port 22 and 80"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: sg-ec2-com-vpc
      VpcId: !Ref VPC

  LaunchEC2Instance:
    DependsOn: [EC2SecurityGroups, PublicSubnet]
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref EC2SecurityGroups
      SubnetId: !Ref PublicSubnet
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: ec2-com-vpc

  WebAppEIP:
    DependsOn: [LaunchEC2Instance]
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref LaunchEC2Instance
      Tags:
        - Key: Name
          Value: eip-01

  LaunchEC2Instance2:
    DependsOn: [EC2SecurityGroups, PublicSubnet]
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      ImageId: !Ref ImageId2
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref EC2SecurityGroups
      SubnetId: !Ref PublicSubnet
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: ec2-com-vpc-2
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash
            apt update
            apt install nodejs apache2 -y
            echo "hello world" > /var/www/html/index.html

  WebAppEIP2:
    DependsOn: [ LaunchEC2Instance2 ]
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref LaunchEC2Instance2
      Tags:
        - Key: Name
          Value: eip-02
